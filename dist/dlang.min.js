const fs=require("fs"),createId=e=>btoa(e);class DLang{constructor(e){this.lines=e.split("\n")}noHandler(){}run(){let e=this.lines,r=!1,n=!1,s={};for(let i=0;i<e.length;i++){if("import 'dl:main/base.dlang'"===e[i]&&(r=!0),"import 'dl:main/database.dlang'"===e[i]&&(n=!0),e[i].includes("(")){let t,l=e[i].split("(")[0],o=e[i].replace("(","").replace(")","").replace(l,"");t=o.includes("'")?o.replace(/\'/g,""):s[o];let a="createUnsafeDB"===l&&!0===n,c="createDocument"===l&&!0===n,f="createProperty"===l&&!0===n,d="removeDocument"===l&&!0===n,h="removeDB"===l&&!0===n,p="removeProperty"===l&&!0===n,y="renameDocument"===l&&!0===n,u="renameProperty"===l&&!0===n,S="changeProperty"===l&&!0===n,D="getDocument"===l&&!0===n;if("print"===l&&!0===r)void 0===t?console.error(`${o} is not defined.`):console.log(t);else if(a){let e=[" ","+","=","-","!","@","#","$","%","^","&","*","(",")","{","[","]","}","|","\\",'"',"'",";",":","?","/",".",">","<",","];const r=r=>{let n=!1;for(let s=0;s<e.length;s++)if(r.includes(e[s])){n=!0;break}return n};if(r(t))throw TypeError("Unallowed letter in the given file name.");try{fs.writeFileSync(`unsafeDb/${t}.json`,JSON.stringify({id:createId(t)}))}catch(e){console.error(e)}}if(c){let e,r=t.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}e[r[1]]={},fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}if(f){let e,r=t.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}const n={};n[r[2]]=r[3],e[r[1]]=n,Object.assign(e[r[1]],n);try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}if(d){let e,r=t.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}delete e[r[1]],fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}if(h){let e=t.split(", ");s[e[0]]?e[0]=s[e[0]]:this.noHandler();try{fs.unlinkSync(`unsafeDb/${e[0]}.json`)}catch(e){console.error(e)}}if(p){let e,r=t.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}delete e[r[1]][r[2]];try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}if(y){let e,r=t.split(", ")||t.split(",");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}let n=e[r[1]];delete e[r[1]],e[r[2]]=n;try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}if(u){let e,r=t.split(", ")||t.split(",");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler(),s[r[3]]?r[3]=s[r[3]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}let n=e[r[1]][r[2]];delete e[r[1]][r[2]];let i={};i[r[3]]=n,Object.assign(e[r[1]],i);try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}if(S){let e,r=t.split(", ")||t.split(",");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler(),s[r[3]]?r[3]=s[r[3]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}e[r[1]][r[2]]=r[3];try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}if(D){let e,r=t.split(", ")||t.split(",");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}}}if(e[i].includes("var",0)){let r,n=["getDocument"];if(r=e[i].replace("var","").replace("=","").trim().split("'"),e[i].split("'")[0].includes("(")){let l=e[i].replace("var","").replace("=","").trim().split("'"),o=l[0].split("(")[0].split(" ")[2],a=[];if(!n.find((e=>e===o)))throw new Error(`${o} is not defined.`);for(let e=0;e<l.length;e++)if(l[e].includes("(")){var t=l[e].split("(")[1].replace(",","").trim();if(t.includes("'"))a.push(t);else{if(!s[t])throw new ReferenceError(`${t} is not defined.`);a.push(s[t])}}else{if(l[e].includes("'"))throw new ReferenceError(`${l[e]} is not defined.`);s[l[e]]?a.push(s[t]):")"===l[e]||a.push(l[e])}console.log(a),s[l[0].split(" ")[0]]=r[1]}else s[r[0].trim()]=r[1]}e[i].includes("//",0)&&this.noHandler()}}}module.exports=DLang;
