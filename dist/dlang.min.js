const fs=require("fs"),createId=e=>btoa(e);class DLang{constructor(e){this.lines=e.split("\n")}noHandler(){}run(){let e=this.lines,r=!1,n=!1,s={};for(let t=0;t<e.length;t++){if("import 'dl:main/base.dlang'"===e[t]&&(r=!0),"import 'dl:main/database.dlang'"===e[t]&&(n=!0),e[t].includes("(")){let l,i=e[t].split("(")[0],o=e[t].replace("(","").replace(")","").replace(i,"");l=o.includes("'")?o.replace(/\'/g,""):s[o];let a="createUnsafeDB"===i&&!0===n,c="createDocument"===i&&!0===n,f="createProperty"===i&&!0===n,d="removeDocument"===i&&!0===n,h="removeDB"===i&&!0===n,y="removeProperty"===i&&!0===n;if("print"===i&&!0===r)void 0===l?console.error(`${o} is not defined.`):console.log(l);else if(a){let e=[" ","+","=","-","!","@","#","$","%","^","&","*","(",")","{","[","]","}","|","\\",'"',"'",";",":","?","/",".",">","<",","];const r=r=>{let n=!1;for(let s=0;s<e.length;s++)if(r.includes(e[s])){n=!0;break}return n};if(r(l))throw TypeError("Unallowed letter in the given file name.");try{fs.writeFileSync(`unsafeDb/${l}.json`,JSON.stringify({id:createId(l)}))}catch(e){console.error(e)}}if(c){let e,r=l.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}e[r[1]]={},fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}if(f){let e,r=l.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}const n={};n[r[2]]=r[3],e[r[1]]=n,Object.assign(e[r[1]],n);try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}if(d){let e,r=l.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}delete e[r[1]],fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}if(h){let e=l.split(", ");s[e[0]]?e[0]=s[e[0]]:this.noHandler();try{fs.unlinkSync(`unsafeDb/${e[0]}.json`)}catch(e){console.error(e)}}if(y){let e,r=l.split(", ");s[r[0]]?r[0]=s[r[0]]:this.noHandler(),s[r[1]]?r[1]=s[r[1]]:this.noHandler(),s[r[2]]?r[2]=s[r[2]]:this.noHandler();try{e=JSON.parse(fs.readFileSync(`unsafeDb/${r[0]}.json`))}catch(e){console.error(e)}delete e[r[1]][r[2]];try{fs.writeFileSync(`unsafeDb/${r[0]}.json`,JSON.stringify(e))}catch(e){console.error(e)}}}if(e[t].includes("var",0)){let r=e[t].replace("var","").replace("=","").trim().split("'");s[r[0].trim()]=r[1]}e[t].includes("//",0)&&this.noHandler()}}}module.exports=DLang;
